package model;

import java.io.Serializable;
import javax.persistence.*;
import java.util.List;


/**
 * The persistent class for the candidate database table.
 * 
 */
@Entity
@NamedQuery(name="Candidate.findAll", query="SELECT c FROM Candidate c")
public class Candidate implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name="candidate_id")
	private int candidateId;

	private String email;

	@Column(name="first_name")
	private String firstName;

	@Column(name="last_name")
	private String lastName;

	private String resume;

	private float score;

	private String status;

	//bi-directional many-to-many association to User
	@ManyToMany(mappedBy="candidates")
	private List<User> users;

	//bi-directional many-to-one association to ProcessStatus
	@OneToMany(mappedBy="candidate")
	private List<ProcessStatus> processStatuses;

	//bi-directional many-to-one association to QuestionsAsked
	@OneToMany(mappedBy="candidate")
	private List<QuestionsAsked> questionsAskeds;

	public Candidate() {
	}

	public int getCandidateId() {
		return this.candidateId;
	}

	public void setCandidateId(int candidateId) {
		this.candidateId = candidateId;
	}

	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getResume() {
		return this.resume;
	}

	public void setResume(String resume) {
		this.resume = resume;
	}

	public float getScore() {
		return this.score;
	}

	public void setScore(float score) {
		this.score = score;
	}

	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public List<User> getUsers() {
		return this.users;
	}

	public void setUsers(List<User> users) {
		this.users = users;
	}

	public List<ProcessStatus> getProcessStatuses() {
		return this.processStatuses;
	}

	public void setProcessStatuses(List<ProcessStatus> processStatuses) {
		this.processStatuses = processStatuses;
	}

	public ProcessStatus addProcessStatus(ProcessStatus processStatus) {
		getProcessStatuses().add(processStatus);
		processStatus.setCandidate(this);

		return processStatus;
	}

	public ProcessStatus removeProcessStatus(ProcessStatus processStatus) {
		getProcessStatuses().remove(processStatus);
		processStatus.setCandidate(null);

		return processStatus;
	}

	public List<QuestionsAsked> getQuestionsAskeds() {
		return this.questionsAskeds;
	}

	public void setQuestionsAskeds(List<QuestionsAsked> questionsAskeds) {
		this.questionsAskeds = questionsAskeds;
	}

	public QuestionsAsked addQuestionsAsked(QuestionsAsked questionsAsked) {
		getQuestionsAskeds().add(questionsAsked);
		questionsAsked.setCandidate(this);

		return questionsAsked;
	}

	public QuestionsAsked removeQuestionsAsked(QuestionsAsked questionsAsked) {
		getQuestionsAskeds().remove(questionsAsked);
		questionsAsked.setCandidate(null);

		return questionsAsked;
	}

}
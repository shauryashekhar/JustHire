package com.wissen.justhire;

import java.util.List;
import java.util.Optional;

import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;

import com.wissen.justhire.model.Candidate;
import com.wissen.justhire.model.Question;
import com.wissen.justhire.model.Round;
import com.wissen.justhire.model.User;
import com.wissen.justhire.repository.CandidateRepository;
import com.wissen.justhire.repository.QuestionAskedRepository;
import com.wissen.justhire.repository.QuestionRepository;
import com.wissen.justhire.repository.UserRepository;

@SpringBootApplication
@EnableJpaRepositories
public class JustHireAppApplication {

	public static void main(String[] args) {
		SpringApplication.run(JustHireAppApplication.class, args);

	}

//	Sort sort = new Sort(new Sort.Order(Direction.ASC, "lastName"));
//	List<Employee> employees = repo.findBySalaryGreaterThan(new Long(10000), sort);
//	for(Employee e : employees){
//		System.out.println(e);
//	}

	@Bean
	public CommandLineRunner test(UserRepository userRepository, CandidateRepository candidateRepository,
			QuestionRepository questionRepository, QuestionAskedRepository questionAskedRepository) {
		return args -> {
			
		//Testing Candidate Repository
			
			//find all candidate
			
			List<Candidate> candidates = candidateRepository.findAll();
			for(Candidate c : candidates)
				System.out.println(c.getFirstName());
			
			
			//insert candidate
//			Candidate can = new Candidate();
//			can.setFirstName("Sagar");
//			can.setLastName("Naik");
//			can.setEmail("s.naik@gmail.com");
//			candidateRepository.save(can);
			
			//update
			
			candidateRepository.updateStatusAndScore("selected", 10.00f, 5);
			System.out.println("updated");
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			//------------------------------------------------------------------
//			List<User> user = repository.findAll();
//			for (User u : user)
//				System.out.println(u.getEmail());
//
//			System.out.println("executed");
//			Round round = new Round();
//			round.setRoundNumber(1);
//			System.out.println("save executed");
//			List<Candidate> candidatew = candidate.findByStatus("g");
//			Optional<Question> question = questionRepository.findNext("easy", round, "0");
//
//			candidate.updateStatusAndScore("helol", 2.0f, 2);
////			questionAskedRepository.deleteBycandidate(new Candidate());

		};
	}
}
